public static void merge(int a[], int l, int m, int r){
        int n1 = m - l + 1;
        int n2 = r - m;

        int[] L = new int[n1];
        int[] R = new int[n2];

        for(int i=0;i<n1;i++){
            L[i] = a[l + i];
        }

        for(int i=0;i<n2;i++){
            R[i] = a[m+1 + i];
        }


        int i = 0;
        int j = 0;
        int k = l;

        while(i<n1 && j<n2){

            if(L[i] <= R[j]){
                a[k] = L[i];
                i++;
            }
            else{
                a[k] = R[j];
                j++;
            }

            k++;
        }


        while(i<n1){
            a[k] = L[i];
            i++;
            k++;
        }

        while(j<n2){
            a[k] = R[j];
            j++;
            k++;
        }

    }


public static int[] implementMergeSort(int a[], int l, int r)
    {
        int m = l + (r-l)/2;

        if(l < r){
            implementMergeSort(a, l, m);
            implementMergeSort(a, m+1, r);
            merge(a, l, m, r);
        }

        return a;

    }
